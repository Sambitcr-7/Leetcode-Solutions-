/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    string res;
    void dfs(TreeNode* node){
        if(!node){
            return;
        }
        if(!res.empty()){
            res += "(";
        }
        res += to_string(node->val);
        if(node->left){
            dfs(node->left);
            res += ")";
        }else if(node->right){
            res += "()";
        }
        if(node->right){
            dfs(node->right);
            res += ")";
        }
    }
    string tree2str(TreeNode* root) {
        dfs(root);
        return res;
    }
};
