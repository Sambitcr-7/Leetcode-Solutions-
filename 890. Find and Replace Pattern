class Solution {
public:
    vector<string> findAndReplacePattern(vector<string>& words, string pattern) {
        vector<string>ans;
        for(auto word : words){
            if(word.size() != pattern.size()) continue;
            unordered_map<char,char>map1;
            unordered_map<char,char>map2;
            bool flag = true;
            for(int i = 0; i < word.size(); ++i){
                if(!map1.count(word[i]) && !map2.count(pattern[i])){
                    map1[word[i]] = pattern[i];
                    map2[pattern[i]] = word[i];
                }else if(map1[word[i]] == pattern[i] && map2[pattern[i]] == word[i]){
                    continue;
                }else{
                    flag = false;
                    break;
                }
            }
            if(flag) ans.push_back(word);
        }
        return ans;
    }
};
